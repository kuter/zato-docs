
.. highlight:: python
   :linenothreshold: 1

LinkedAuth.create - Python API
==============================

:doc:`Links <../../../../topic/user/linked-auth>` a security definition with an SSO user.

API
---

self.sso.user.create_linked_auth
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:method:: create_linked_auth(self, cid, ust, user_id, auth_type, auth_username, is_active, current_app, remote_addr)

  Links a security definition with an SSO user.

  :param cid: Correlation ID used by :doc:`audit log <../../../../audit/index>`
  :type cid: string

  :param ust: Current user's UST
  :type ust: string

  :param user_id: Current user's UST
  :type user_id: string

  :param auth_type: Type of the security definition that is being linked to the SSO user, must be 'basic_auth' or 'jwt'
  :type auth_type: string

  :param auth_username: Username from the security definition that is to be linked to the SSO user
  :type auth_username: string

  :param is_active: Username from the security definition that is to be linked to the SSO user
  :type is_active: bool

  :param current_app: Name of application the call is made from
  :type current_app: string

  :param remote_addr: Current user's remote address
  :type remote_addr: string

::

# -*- coding: utf-8 -*-

from __future__ import absolute_import, division, print_function, unicode_literals

# Zato

from zato.server.service import Service

class CreateLink(Service):
    def handle(self):

        # Request metadata
        current_ust = 'gAAAAABc9YDOwa4it_lLu3tHDjdKGdjHHzLTddA_qVIxjT_HXJuTUhn-TAspto1McwtQ5jGbqfJVeSzBQM0h91AUBhUAD1gtKcrjHAn2IvlHrKwEzy35-Ds='
        current_app = 'CRM'
        remote_addr = '127.0.0.1'

        # ID of the user to create a link for
        user_id = 'zusr3tm8jhgqjd9smtdt7erb427s9x'

        # Account to link to the user
        auth_type = 'basic_auth'
        auth_username = 'my.account'

        # The link shall be active
        is_active = True

        # ust, user_id, auth_type, auth_username, is_active, current_app, remote_addr

        # Create the link
        self.sso.user.create_linked_auth(self.cid, current_ust, user_id, auth_type, auth_username, is_active,
          current_app, remote_addr)

::

  INFO {
    'display_name': 'My User',
    'is_active': True,
    'is_internal': False,
    'is_super_user': True,
    'is_approval_needed': True,
    'approval_status': 'before_decision',
    'approval_status_mod_by': 'zusr3qnafn39208krbt0vt2nypx2ta',
    'approval_status_mod_time': datetime.datetime(2020, 2, 28, 11, 33, 13, 359733),
    'is_locked': False,
    'password_expiry': datetime.datetime(2020, 2, 28, 11, 33, 13, 359733),
    'password_must_change': True,
    'password_last_set': datetime.datetime(2018, 2, 28, 11, 33, 13, 359733),
    'sign_up_time': datetime.datetime(2018, 2, 28, 11, 33, 13, 359733),
    'sign_up_status': 'final',
    'username': 'user1',
    'user_id': 'zusr1e2xwnk9p89ty8y0skcpy795c9'
  }
